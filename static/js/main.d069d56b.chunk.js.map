{"version":3,"sources":["fbase.js","routes/Auth.js","routes/CreateAccount.js","components/Quiz.js","components/SubmitAnswer.js","components/Board.js","components/Wrongs.js","components/ChangeAnswer.js","sound/sound3.mp3","routes/Home.js","routes/Draw.js","components/Router.js","Snow.js","components/App.js","index.js"],"names":["firebase","initializeApp","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","firebaseInstance","authService","auth","dbService","firestore","storage","Auth","useState","buttonClicked","setButtonClicked","onGooleClick","a","provider","GoogleAuthProvider","signInWithPopup","Grid","id","container","direction","spacing","alignItems","item","xs","Button","variant","onClick","fullWidth","CreateAccount","user","displayName","name","setName","phoneNumber","tel","setTel","created","setCreated","history","useHistory","onInputChange","event","target","value","replace","onAddUserInfoClicked","collection","add","uid","isAdmin","alert","go","Snackbar","anchorOrigin","vertical","horizontal","open","autoHideDuration","message","md","FormControl","InputLabel","htmlFor","Input","type","aria-describedby","onChange","color","Quiz","quizs","currentQuiz","showAnswer","no","question","answer","stepStyle","stepper","padding","background","className","Paper","Stepper","activeStep","alternativeLabel","style","map","quiz","index","Step","StepLabel","stepLabel","dangerouslySetInnerHTML","__html","SubmitAnswer","doc_user_id","setAnswer","onSubmitClicked","answerObj","doc","update","FormHelperText","Board","participants","corrects","size","Wrongs","wrongs","showWrongs","length","FormGroup","FormControlLabel","control","Switch","checked","label","w","idx","elevation","align","ChangeAnswer","myAnswer","setMyAnswer","newAnswer","setNewAnswer","answerCorrectionMode","setAnswerCorrectionMode","toggleAnswerCorrectionMode","prev","correctAnswer","preventDefault","where","get","dbAns","docs","useEffect","data","textAlign","width","Home","currentInfo","setQuizs","isSolved","setIsSolved","setParticipants","setCorrects","setWrongs","useSound","dingdong","play","setCurrentQuiz","setShowAnswer","bool","checkSolved","isCorrectAnswer","correctAnswerArr","includes","orderBy","quizData","currentQuizNo","onSnapshot","snapshot","answers","c","justify","to","Draw","participant","setParticipant","usersCollection","usersData","filter","u","hideName","hideTel","slice","GetPeopleInfoComponent","peopleInfo","p","AppRouter","isLoggedIn","hasAccount","exact","path","Snow","children","arr","Array","fill","Snowflake","el","i","animationDelay","Math","random","toFixed","fontSize","App","init","setInit","setUser","setHasAccount","docUserId","setDocUserId","setCurrentInfo","onAuthStateChanged","userinfo","Boolean","e","newUser","is_chrome","navigator","userAgent","toLowerCase","indexOf","vendor","is_safari","console","log","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d069d56b.chunk.js","sourcesContent":["import firebase from 'firebase/app';\nimport 'firebase/auth';\nimport 'firebase/firestore';\nimport 'firebase/storage';\n\nconst firebaseConfig = {\n    apiKey: process.env.REACT_APP_API_KEY,\n    authDomain: process.env.REACT_APP_AUTH_DOMAIN,\n    databaseURL: process.env.REACT_APP_DATABASE_URL,\n    projectId: process.env.REACT_APP_PROJECT_ID,\n    storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\n    messagingSenderId: process.env.REACT_APP_MESSAGIN_ID,\n    appId: process.env.REACT_APP_APP_ID,\n    measurementId: process.env.REACT_APP_MEASUREMENT_ID\n  };\n\nfirebase.initializeApp(firebaseConfig);\n\nexport const firebaseInstance = firebase;\nexport const authService = firebase.auth();\nexport const dbService = firebase.firestore();\nexport const storageService = firebase.storage(); ","import React, { useState } from 'react';\nimport { firebaseInstance, authService } from '../fbase';\nimport './css/Auth.css';\nimport { Grid, Button } from '@material-ui/core';\nimport { IoLogoGoogle, IoLogoApple } from 'react-icons/io5'\n\nconst Auth = () => {\n    const [buttonClicked, setButtonClicked] = useState(false);\n\n    const onGooleClick = async () => {\n        const provider = new firebaseInstance.auth.GoogleAuthProvider();\n        setButtonClicked(true)\n        await authService.signInWithPopup(provider);\n    }\n\n    return (\n    <>\n    <Grid id=\"auth-button\" container direction=\"row\" spacing={1} alignItems=\"center\">\n        {/* <Grid item xs={12}>\n            <img src='../img/logo.jpeg' alt=\"Love Came Down\"/>\n        </Grid> */}\n        <Grid item xs={12}>\n            <Button variant=\"outlined\" onClick={onGooleClick} fullWidth> <IoLogoGoogle/> &nbsp; 구글아이디로 로그인</Button>\n        </Grid>\n        { buttonClicked &&\n            <Grid item xs={12}>\n                <h2>잠시 기다려주세요...</h2>\n            </Grid>\n        }\n    </Grid>\n    </>\n    )\n}\n\nexport default Auth","import React, {useState} from  'react';\nimport { Grid, Input, FormControl, InputLabel, Button, Snackbar} from '@material-ui/core';\nimport { dbService } from '../fbase';\nimport {useHistory} from 'react-router-dom';\n\nconst CreateAccount = ({user}) => {\n    const [name, setName] = useState(user.displayName);\n    const [tel, setTel] = useState(user.phoneNumber || '');\n    const [created, setCreated] = useState(false);\n    const history = useHistory();\n\n    const onInputChange = (event) => {\n        const {target: {name, value}} = event;\n        if(name===\"name\")\n            setName(value);\n        else if(name===\"tel\")\n            setTel(value.replace('-','') );\n    }\n    const onAddUserInfoClicked = async () => {\n        await dbService.collection('userinfo').add({\n            uid: user.uid,\n            name,\n            tel,\n            isAdmin: false\n        });\n        alert('가입이 완료되었습니다.');\n        setCreated(true);\n        history.go(0);\n    }\n\n    return (\n        <>\n        { created ? \n            <Snackbar\n            anchorOrigin={{vertical: 'bottom',horizontal: 'left',}}\n            open={true}\n            autoHideDuration={6000}\n            message=\"새로고침하면 퀴즈 페이지로 이동됩니다.\"\n        />\n        :\n            <form id=\"auth-form\">\n            <Grid container direction=\"row\" spacing={2} alignItems=\"center\">\n                <Grid item xs={12}>\n                    <h2> 이름과 전화번호를 입력해주세요. 이 정보는 추첨을 통해 선물을 보내드리기 위한 정보로, 꼭 입력하지 않아도 됩니다.  </h2>\n                </Grid>\n                <Grid item xs={12} md={5}>\n                    <FormControl>\n                        <InputLabel htmlFor=\"name-input\">이름</InputLabel>\n                        <Input id=\"name-input\" type=\"text\" aria-describedby=\"name-helper\" name=\"name\" onChange={onInputChange} value={name}/>\n                    </FormControl>\n                </Grid>\n                <Grid item xs={12} md={5}>\n                    <FormControl>\n                        <InputLabel htmlFor=\"tel-input\">전화번호</InputLabel>\n                        <Input id=\"tel-input\" type=\"tel\" aria-describedby=\"tel-helper\" name=\"tel\" onChange={onInputChange} value={tel}/>\n                    </FormControl>\n                </Grid>\n                <Grid item xs={12} md={2}>\n                    <Button onClick={onAddUserInfoClicked} variant=\"contained\" color=\"primary\">확인</Button>\n                </Grid>\n            </Grid>\n        </form>\n        }\n        </>\n    )  \n}\n\nexport default CreateAccount;","import React from 'react';\nimport { Paper, Stepper, Step, StepLabel } from '@material-ui/core';\nimport { IoBagCheckSharp, IoBagCheckOutline } from 'react-icons/io5'\n\nconst Quiz = ({quizs, currentQuiz, showAnswer}) => {\n    const {no, question, answer} = quizs[currentQuiz];\n    const stepStyle={\n        stepper:{\n            padding:\"1%\",\n            background:\"inherit\",\n        }\n    }\n    return (\n        <>\n        <div className=\"christmas-striped top\"></div>\n        <Paper id=\"quiz\" variant=\"outlined\">\n            <div className=\"quiz-timeline\">\n                <Stepper activeStep={currentQuiz} alternativeLabel style={stepStyle.stepper}>\n                    {quizs.map((quiz, index) => (\n                    <Step key={index}>\n                        <StepLabel \n                            style={stepStyle.stepLabel}/>\n                    </Step>\n                    ))}\n                </Stepper>\n            </div>\n            <div className=\"title\"> Q{no}. </div>\n            <div className=\"question\" dangerouslySetInnerHTML={ {__html: question}}></div>\n            <div className=\"answer\">\n                정답 : &nbsp;\n                { showAnswer ? answer[0] : <><span className=\"loader\"></span>&nbsp;&nbsp;</>}\n            </div>\n        </Paper>\n        <div className=\"christmas-striped bottom\"></div>\n    </>\n    )\n}\n\nexport default Quiz;","import React, { useState } from 'react';\nimport {Paper, Grid, Button, FormControl, Input, InputLabel, FormHelperText} from '@material-ui/core';\nimport { dbService } from '../fbase';\n\nconst SubmitAnswer = ({no, user, doc_user_id}) => {\n    const {uid, name} = user;\n    const [answer, setAnswer] = useState('');\n    const onInputChange = event => {\n        const {target:{value}} = event;\n        setAnswer(value)\n    }\n    const onSubmitClicked = async () => {\n        if(answer==''){\n            alert('정답을 제출해주세요.');\n            return;\n        }\n        const answerObj = {\n            uid,\n            name,\n            answer\n        }\n        await dbService.collection('quiz_'+no).add(answerObj);\n        await dbService.collection('userinfo').doc(doc_user_id).update({\n            ['quiz_'+no]: true\n        })\n        alert('정답이 제출되었습니다.');\n    }\n    return(\n        <div id=\"submitAnswer\">\n            <Grid container direction=\"row\" spacing={2} alignItems=\"center\">\n                <Grid item xs={9}>\n                    <FormControl fullWidth>\n                        <InputLabel htmlFor=\"ans-input\">정답</InputLabel>\n                        <Input id=\"ans-input\" type=\"text\" aria-describedby=\"ans-helper\" name=\"answer\" onChange={onInputChange} value={answer}/>\n                        <FormHelperText id=\"ans-helper\"> 제출 후에는 변경할 수 없습니다!</FormHelperText>\n                    </FormControl>\n                </Grid>\n                <Grid item xs={3}>\n                    <Button onClick={onSubmitClicked} fullWidth variant=\"contained\" color=\"primary\">\n                        제출\n                    </Button>\n                </Grid>\n            </Grid>\n        </div>\n    )\n}\n\nexport default SubmitAnswer;","import React from 'react';\nimport { IoLogoOctocat, IoCheckmarkCircleSharp } from 'react-icons/io5'\n\n\nconst Board = ({participants, corrects}) => {\n    return(\n        <>\n        <div className=\"christmas-striped top slim\"/>\n        <div id=\"board\">\n            <h4>\n                { participants && corrects ?\n                    <IoCheckmarkCircleSharp size=\"28\"/>\n                    :\n                     <IoLogoOctocat size=\"28\"/>\n                }\n                &nbsp;\n                <span>\n\n                {\n                    participants == 0 ?\n                    \"아직 참여하신 분이 없습니다. 제일 먼저 퀴즈를 풀어보세요!\"\n                    :\n                    corrects == 0 ?\n                    `참여해주신 ${participants}분 중 아직 정답자가 없습니다! 가장 먼저 정답을 맞혀봐요!`\n                    :\n                    `참여해주신 ${participants}분 중에서 ${corrects}분이 정답을 맞히셨습니다!`\n                }\n                </span>\n                \n            </h4>\n        </div>\n        <div className=\"christmas-striped bottom slim\"/>\n        </>\n    )\n}\n\nexport default Board;","import React from 'react';\nimport { Paper, Grid, FormGroup, FormControlLabel, Switch } from '@material-ui/core';\nimport {dbService} from '../fbase';\n\nconst Wrongs = ({wrongs, isAdmin, showWrongs}) => {\n    const toggleShowWrongs = () => {\n        dbService.collection('current').doc('current').update({\n            showWrongs: !showWrongs\n        })\n    }\n    return (\n        <>\n        <div className=\"christmas-striped top\"/>\n        <div id=\"wrongs\">\n            <Grid container direction=\"column\" spacing={1}>\n                <Grid item container direction=\"row\">\n                    <Grid item xs={6}>\n                        <h3>오답 {wrongs.length} </h3>\n                    </Grid>\n                    {isAdmin && <Grid item xs={6}>\n                        <FormGroup>\n                            <FormControlLabel\n                                control={<Switch checked={showWrongs} onChange={toggleShowWrongs} name=\"showWrongs\" />}\n                                label={showWrongs ? \"오답 숨기기\" : \"오답 보기\"}\n                            />\n                        </FormGroup>\n                    </Grid>}\n                </Grid>\n                {showWrongs ? wrongs.map( (w, idx) => (\n                    <Grid item key={idx} >\n                        <Paper className=\"wrongs-wrong\" variant=\"elevation\" elevation={2}>\n                            <h3> {w.answer} </h3>\n                        </Paper>\n                    </Grid>\n                    )) \n                    :<Grid item>\n                        <h4 align=\"center\">어떤 오답들이 있을까요?</h4>\n                    </Grid>\n                }\n            </Grid>\n        </div>\n        <div className=\"christmas-striped bottom\"/>\n        </>\n    )\n}\n\nexport default Wrongs;","import React, { useEffect, useState } from 'react';\nimport { Button, InputLabel, Input, FormControl } from '@material-ui/core';\nimport { dbService } from '../fbase';\n\n\nconst ChangeAnswer = ({user, no}) => {\n    const [myAnswer, setMyAnswer] = useState('');\n    const [newAnswer, setNewAnswer] = useState('');\n    const [answerCorrectionMode, setAnswerCorrectionMode] = useState(false);\n    const toggleAnswerCorrectionMode = () => setAnswerCorrectionMode( prev => !prev);\n    const onInputChange = (event) => {\n        const {target: {value}} = event;\n        setNewAnswer(value);\n    }\n    const correctAnswer = async (event) => {\n        event.preventDefault();\n        if(newAnswer==''){\n            alert('변경하실 정답을 입력해주세요.');\n            return;\n        }\n        if(newAnswer !== myAnswer){\n            const dbAns = await dbService.collection('quiz_'+no).where('uid','==',user.uid).get();\n            await dbService.collection('quiz_'+no).doc(dbAns.docs[0].id).update({\n                answer:newAnswer\n            })\n            setMyAnswer(newAnswer);\n        }\n        toggleAnswerCorrectionMode();\n    }\n    useEffect(async () => {\n        const dbAns = (await dbService.collection('quiz_'+no).where('uid','==',user.uid).get()).docs[0].data().answer;\n        setMyAnswer(dbAns);\n        setNewAnswer(dbAns);\n    }, [])\n\n    return (\n        <div className=\"already-submit-message\">\n            {\n                answerCorrectionMode ?\n                <>\n                <FormControl style={{alignItems:\"center\", textAlign:\"center\"}}>\n                    <Input id=\"correct-input\" \n                        type=\"text\" \n                        aria-describedby=\"correct-helper\" \n                        name=\"correct\"\n                        onChange={onInputChange}   \n                        value={newAnswer}\n                        style={{width:\"70%\", textAlign:\"center\"}}/>\n                </FormControl>\n                <Button onClick={correctAnswer} variant=\"contained\" color=\"secondary\" >\n                    수정\n                </Button>\n                </>\n                :\n                <>\n                <div className=\"my-answer\">\n                    <h3>내 정답 : {myAnswer}</h3>\n                </div>\n                <Button onClick={toggleAnswerCorrectionMode} variant=\"contained\" color=\"primary\">\n                    바꾸기\n                </Button>\n                </>\n            }\n        </div>\n    )\n}\n\nexport default ChangeAnswer;","export default __webpack_public_path__ + \"static/media/sound3.aceb025f.mp3\";","import React, {useEffect, useState} from 'react';\nimport { Link } from 'react-router-dom';\nimport Quiz from '../components/Quiz';\nimport { dbService } from '../fbase';\nimport SubmitAnswer from '../components/SubmitAnswer'\nimport Board from '../components/Board';\nimport Wrongs from '../components/Wrongs';\nimport { Grid, Button } from '@material-ui/core';\nimport './css/Home.css';\nimport ChangeAnswer from '../components/ChangeAnswer';\nimport useSound from 'use-sound';\nimport dingdong from '../sound/sound3.mp3';\n\nconst Home = ({user, doc_user_id, currentInfo}) => {\n    const {uid, isAdmin} = user\n    const {currentQuiz, showAnswer, showWrongs} = currentInfo;\n    const [quizs, setQuizs] = useState([]);\n    const [isSolved, setIsSolved] = useState(false);\n    const [participants, setParticipants] = useState(0);\n    const [corrects, setCorrects] = useState(0);\n    const [wrongs, setWrongs] = useState([]);\n    const [play] = useSound(dingdong);\n\n    const setCurrentQuiz = ( idx ) => {\n        dbService.collection('current').doc('current').update({\n            currentQuiz: idx\n        })\n    }\n    const setShowAnswer = (bool) => {\n        bool && play();\n        dbService.collection('current').doc('current').update({\n            showAnswer: bool\n        })\n    }\n    const onPrevQuizClicked = () => {\n        setCurrentQuiz( currentQuiz - 1 );\n        setShowAnswer(false);\n        dbService.collection('current').doc('current').update({\n            showWrongs: false\n        })\n    }\n    const onNextQuizClicked = () => {\n        setCurrentQuiz( currentQuiz + 1);\n        setShowAnswer(false);\n        dbService.collection('current').doc('current').update({\n            showWrongs: false\n        })\n    }\n    const checkSolved = async () => {\n        if(!quizs.length)\n            return;\n        setIsSolved(user['quiz_'+quizs[currentQuiz].no]);\n    }\n    const isCorrectAnswer = (answer, correctAnswerArr) => correctAnswerArr.includes(answer);\n\n    useEffect( async () => {\n        const quizData = await dbService.collection('quiz').orderBy('no').get();\n        setQuizs(quizData.docs.map(doc => doc.data()));\n    }, [])\n    useEffect( () => {\n        checkSolved()\n    }, [quizs, currentQuiz, user])\n    useEffect( async () => {\n        if(!quizs.length)\n            return;\n        const currentQuizNo = quizs[currentQuiz].no;\n        const correctAnswerArr = (await dbService.collection('quiz').where('no','==',currentQuizNo).get()).docs[0].data().answer;\n        dbService.collection(\"quiz_\"+currentQuizNo).onSnapshot( snapshot => {\n            const answers = snapshot.docs.map( doc => doc.data() );\n            setParticipants(answers.length);\n            let c = [], w = [];\n            answers.map( a => {\n                isCorrectAnswer(a.answer, correctAnswerArr) ? \n                      c = [...c, a]\n                    : w = [...w, a]\n            })\n            setCorrects(c.length);\n            setWrongs(w);\n        })\n    }, [quizs, currentQuiz])\n\n    return (\n        <>\n        <Grid container direction=\"row\" spacing={2} alignItems=\"stretch\">\n            <Grid container item xs={12} md={8} direction=\"row\">\n                <Grid item xs={12}>\n                    {\n                        quizs.length ?\n                        <Quiz \n                            quizs={quizs}\n                            currentQuiz={currentQuiz}\n                            showAnswer={showAnswer}/> \n                        : <h6>퀴즈를 가져오는 중입니다...</h6>\n                    }\n                </Grid>\n\n                { isAdmin &&\n                    <Grid id=\"admin-button-box\" container item xs={12} direction=\"row\" justify=\"flex-end\" alignItems=\"center\">\n                        { currentQuiz > 0 && \n                            <Grid item xs={6} md={3}>\n                                <Button variant=\"contained\"\n                                 color=\"primary\" \n                                 fullWidth \n                                 onClick={onPrevQuizClicked}>\n                                     이전 문제\n                                </Button>\n                            </Grid>\n                        }\n                        <Grid item xs={6} md={3}>\n                            {   \n                                showAnswer ? \n                                    ( currentQuiz+1<quizs.length ?\n                                            <Button variant=\"contained\" \n                                                color=\"primary\" fullWidth \n                                                onClick={onNextQuizClicked}>\n                                                    다음 문제\n                                            </Button>\n                                        :\n                                            <Link to=\"/draw\">\n                                                <Button variant=\"contained\" color=\"primary\" fullWidth>\n                                                    추첨\n                                                </Button> \n                                            </Link>\n                                        )\n                                : <Button variant=\"contained\" \n                                    color=\"secondary\" \n                                    fullWidth \n                                    onClick={()=>setShowAnswer(true)}>\n                                        정답 공개\n                                    </Button>\n                            }\n                        </Grid>\n                    </Grid>\n                }\n\n                <Grid item xs={12}>\n                    {quizs.length \n                        && !showAnswer\n                        && (\n                            !isSolved ?\n                            <SubmitAnswer no={quizs[currentQuiz].no} user={user} doc_user_id={doc_user_id}/>\n                            : <ChangeAnswer user={user} no={quizs[currentQuiz].no}/>\n                        )}\n                </Grid>\n                <Grid item xs={12}>\n                    {quizs.length && \n                        <Board participants={participants} corrects={corrects}/>}\n                </Grid>\n            </Grid>\n            <Grid item xs={12} md={4}>\n                <Wrongs wrongs={wrongs} isAdmin={isAdmin} showWrongs={showWrongs}/>\n            </Grid>\n        </Grid>\n        </>\n    )\n}\n\nexport default Home;","import React, { useState, useEffect } from 'react';\nimport { Paper, Grid } from '@material-ui/core';\nimport './css/Draw.css';\nimport { dbService } from '../fbase';\n\nconst Draw = () => {\n    const [participant, setParticipant] = useState([]);\n    const [correcter, setCorrecter] = useState([]);\n    useEffect(async ()=>{\n        const usersCollection = await dbService.collection('userinfo').get();\n        const usersData = usersCollection.docs.map(doc => doc.data()).filter((u, idx)=> idx<15);\n        setParticipant(usersData);\n    },[])\n    const hideName = name => {\n        if(name.length <=1)\n            return name\n        else if(name.length==2)\n            return name[0]+'*';\n        else if(name.length==3)\n            return name[0]+'*'+name[2];\n        else\n            return name[0]+'**'+name[name.length-1];\n    }\n    const hideTel = tel => {\n        if(tel.length <=4)\n            return tel\n        else\n            return '***-****-'+tel.slice(-4);\n    }\n\n    const GetPeopleInfoComponent = ({peopleInfo}) => (\n        <Paper className=\"people\" variant=\"elevation\" elevation={3}>\n            <Grid container direction=\"row\" spacing={1}>\n                {peopleInfo.map( (p, idx) => {\n                    const {name, tel} = p;\n                    return (\n                        <Grid key={idx} item xs={12}>\n                            <Paper variant=\"elevation\" elevation={1}>\n                                <Grid container>\n                                    <Grid item xs={5}> {hideName(name)} </Grid>\n                                    <Grid item xs={7}> {hideTel(tel)} </Grid>\n                                </Grid>\n                            </Paper>\n                        </Grid>\n                    )\n                })}\n            </Grid>\n        </Paper>\n    )\n    return (\n        <Grid container direction=\"row\" spacing={2} alignItems=\"center\">\n            <Grid item xs={12} md={4}>\n                <GetPeopleInfoComponent peopleInfo={participant}/>\n            </Grid>\n            <Grid item xs={12} md={4}>\n                <Paper className=\"draw\" variant=\"elevation\" elevation={3}>\n                    추첨\n                </Paper>\n            </Grid>\n        </Grid>\n        \n    )\n}\n\nexport default Draw;","import React from \"react\";\nimport { HashRouter as Router, Route, Switch, Redirect } from 'react-router-dom';\nimport Auth from \"../routes/Auth\";\nimport CreateAccount from \"../routes/CreateAccount\";\nimport Home from \"../routes/Home\";\nimport Draw from \"../routes/Draw\";\n\nconst AppRouter = ({ isLoggedIn, user, hasAccount, doc_user_id, currentInfo }) => {\n    return (\n        <Router>\n            <Switch>\n            {isLoggedIn? (\n                hasAccount ?\n                <>\n                    <Route exact path=\"/\">\n                        <Home user={user} doc_user_id={doc_user_id} currentInfo={currentInfo}/>\n                    </Route>\n                    {\n                        user.isAdmin && \n                            <Route exact path=\"/draw\">\n                                <Draw/>\n                            </Route>\n                    }\n                    {/* <Redirect from=\"*\" to=\"/\"/> */}\n                </>\n                :\n                <>\n                    <Route exact path=\"/\">\n                        <CreateAccount user={user}/>\n                    </Route>\n                </>\n            ) \n            : (\n            <>\n                <Route exact path=\"/\">\n                    <Auth />\n                </Route>\n            </>\n            )}\n            </Switch>\n        </Router>\n    );\n};\nexport default AppRouter;","import React from 'react';\nconst Snow = ({children}) => {\n    const maxFontSize=8;\n    let arr = new Array(200).fill(0)\n\n    const Snowflake = ({id, style}) =>{\n        const flake='*';\n        return(\n          <p className='Snowflake' id={`item${id}`} style={style}>\n            {flake}\n          </p>\n        )\n    }\n\n    return (\n    <>\n    <noscript> Don't open this html dom!!!!</noscript>\n        <div id=\"snow\">\n        {\n            arr.map((el, i)=>{\n            const animationDelay = `${(Math.random()*16).toFixed(2)}s`;\n            const size = maxFontSize-10*Math.random();\n            const fontSize = `${(size > 0 ? size : .1).toFixed(2)}px`;\n                let style = {\n                    animationDelay,\n                    fontSize\n                    }\n                return <Snowflake key={i} id={i} style={style}/>;\n            })\n        }\n        </div>\n        {children}\n    </>\n    )\n}\n\nexport default Snow;","import React, { useState, useEffect } from 'react';\nimport { authService, dbService } from '../fbase';\nimport AppRouter from './Router';\nimport Snow from '../Snow';\nimport useSound from 'use-sound';\nimport dingdong from '../sound/sound3.mp3';\n\nfunction App() {\n  const [init, setInit] = useState(false);\n  const [user, setUser] = useState(null);\n  const [hasAccount, setHasAccount] = useState(false);\n  const [docUserId, setDocUserId] = useState('');\n  const [currentInfo, setCurrentInfo] = useState({currentQuiz:0, showWrongs:false});\n  const [play] = useSound(dingdong);\n  \n  useEffect(() => {\n      authService.onAuthStateChanged( async u => {\n        if(u){\n          const userinfo = await dbService.collection('userinfo').where('uid','==',u.uid).get();\n          setHasAccount(Boolean(userinfo.docs.length))\n          try{\n            setUser(userinfo.docs[0].data());\n            setDocUserId(userinfo.docs[0].id);\n          }catch(e){\n            setUser(u)\n          }\n        }\n        else{\n          setUser(null);\n        }\n        setInit(true);\n      });\n      dbService.collection('current').doc('current').onSnapshot(data => {\n        ( !currentInfo.showAnswer && data.data().showAnswer ) && play()\n        setCurrentInfo(data.data())\n      });\n    }, [])\n    useEffect(() => {\n      if(!docUserId)\n        return;\n      dbService.collection('userinfo').doc(docUserId).onSnapshot( newUser => {\n        setUser(newUser.data());\n      })\n    },[docUserId])\n    \n    \n  return (\n    <>\n    <Snow/>\n    { init ? <AppRouter \n      isLoggedIn={Boolean(user)} \n      user={user} \n      hasAccount={hasAccount} \n      doc_user_id={docUserId}\n      currentInfo={currentInfo} /> : \"로딩중입니다!\" }\n      </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport './index.css';\n\nvar is_chrome = ((navigator.userAgent.toLowerCase().indexOf('chrome') > -1) &&(navigator.vendor.toLowerCase().indexOf(\"google\") > -1));\nvar is_safari = navigator.userAgent.toLowerCase().indexOf('safari/') > -1;\n\nconsole.log(is_chrome, is_safari);\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}