[{"/Users/sooyoung/youquiz/src/components/App.js":"1","/Users/sooyoung/youquiz/src/components/Router.js":"2","/Users/sooyoung/youquiz/src/routes/Auth.js":"3","/Users/sooyoung/youquiz/src/routes/Home.js":"4","/Users/sooyoung/youquiz/src/components/Quiz.js":"5","/Users/sooyoung/youquiz/src/routes/CreateAccount.js":"6","/Users/sooyoung/youquiz/src/components/Board.js":"7","/Users/sooyoung/youquiz/src/components/SubmitAnswer.js":"8","/Users/sooyoung/youquiz/src/components/Wrongs.js":"9","/Users/sooyoung/youquiz/src/index.js":"10","/Users/sooyoung/youquiz/src/routes/Draw.js":"11","/Users/sooyoung/youquiz/src/components/ChangeAnswer.js":"12","/Users/sooyoung/youquiz/src/Snow.js":"13","/Users/sooyoung/youquiz/src/fbase.js":"14","/Users/sooyoung/youquiz/src/quizs.js":"15","/Users/sooyoung/youquiz/src/components/Ready.js":"16","/Users/sooyoung/youquiz/src/routes/ShowResult.js":"17","/Users/sooyoung/youquiz/src/components/GetTable.js":"18","/Users/sooyoung/youquiz/src/components/ReaultTable.js":"19","/Users/sooyoung/youquiz/src/components/Navtab.js":"20"},{"size":1781,"mtime":1607766461036,"results":"21","hashOfConfig":"22"},{"size":1499,"mtime":1607521777240,"results":"23","hashOfConfig":"22"},{"size":2973,"mtime":1607357897628,"results":"24","hashOfConfig":"22"},{"size":8355,"mtime":1607770072443,"results":"25","hashOfConfig":"22"},{"size":1299,"mtime":1607172037459,"results":"26","hashOfConfig":"22"},{"size":4944,"mtime":1607764777367,"results":"27","hashOfConfig":"22"},{"size":1888,"mtime":1607693992721,"results":"28","hashOfConfig":"22"},{"size":1709,"mtime":1607769867095,"results":"29","hashOfConfig":"22"},{"size":1773,"mtime":1606931708599,"results":"30","hashOfConfig":"22"},{"size":230,"mtime":1606994256975,"results":"31","hashOfConfig":"22"},{"size":7254,"mtime":1607353563381,"results":"32","hashOfConfig":"22"},{"size":2544,"mtime":1607769900967,"results":"33","hashOfConfig":"22"},{"size":940,"mtime":1607264322719,"results":"34","hashOfConfig":"22"},{"size":781,"mtime":1606624977062,"results":"35","hashOfConfig":"22"},{"size":2222,"mtime":1607342811392,"results":"36","hashOfConfig":"22"},{"size":1738,"mtime":1607769996807,"results":"37","hashOfConfig":"22"},{"size":202,"mtime":1607354379819,"results":"38","hashOfConfig":"22"},{"size":1323,"mtime":1607270925071,"results":"39","hashOfConfig":"22"},{"size":1533,"mtime":1607354399266,"results":"40","hashOfConfig":"22"},{"size":2219,"mtime":1607769883813,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1lsnn2d",{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"58"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"66"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"58"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/sooyoung/youquiz/src/components/App.js",[],"/Users/sooyoung/youquiz/src/components/Router.js",["91"],"/Users/sooyoung/youquiz/src/routes/Auth.js",[],"/Users/sooyoung/youquiz/src/routes/Home.js",["92","93","94"],"/Users/sooyoung/youquiz/src/components/Quiz.js",[],["95","96"],"/Users/sooyoung/youquiz/src/routes/CreateAccount.js",[],"/Users/sooyoung/youquiz/src/components/Board.js",["97"],"import { rgbToHex } from '@material-ui/core';\nimport React, { useEffect, useRef } from 'react';\nimport { IoLogoOctocat, IoCheckmarkCircleSharp } from 'react-icons/io5'\n\nconst Gauge = ({score, goal}) => {\n    const perc = score / goal;\n    const gauge_fill = useRef();\n    const gauge_cover = useRef();\n    \n    const setGaugeValue = (value) => {\n        if (value < 0) {\n            value=0\n        }\n        if (value > 1 ) {\n            value=1\n        }\n        const offset = parseInt(55+192*(1-perc));\n        gauge_fill.current.style.background=rgbToHex(`rgb(255,${offset},${offset})`);\n        gauge_fill.current.style.transform = `rotate(${\n            value / 2\n        }turn)`;\n        gauge_cover.current.textContent = score;\n    }\n    useEffect(() => {\n        setGaugeValue(perc);\n    },[score, goal])\n\n    return (\n        <div className=\"gauge\">\n            <div className=\"gauge__body\">\n                <div ref={gauge_fill} className=\"gauge__fill\"></div>\n                <div ref={gauge_cover} className=\"gauge__cover\"></div>\n            </div>\n        </div>\n    )\n}\nconst Board = ({participants, corrects, showAnswer, score, goal}) => {\n    return(\n        <>\n        <div className=\"christmas-striped top slim\"/>\n        <div id=\"board\">\n            <div className=\"current\">\n                { participants ?\n                    <><IoCheckmarkCircleSharp size=\"32\"/>&nbsp; {participants}분 참여하셨습니다!</>\n                    :\n                    <><IoLogoOctocat size=\"32\"/>&nbsp; 아직 참여하신 분이 없습니다. 제일 먼저 퀴즈를 풀어보세요! </>\n                }\n                \n            </div>\n            <div className=\"cumulative\">\n                <Gauge score={score} goal={goal}/>\n            </div>\n        </div>\n        <div className=\"christmas-striped bottom slim\"/>\n        \n        </>\n    )\n}\n\nexport default Board;",["98","99"],"/Users/sooyoung/youquiz/src/components/SubmitAnswer.js",["100"],"/Users/sooyoung/youquiz/src/components/Wrongs.js",[],["101","102"],"/Users/sooyoung/youquiz/src/index.js",[],["103","104"],"/Users/sooyoung/youquiz/src/routes/Draw.js",["105","106","107","108","109","110"],"import React, { useState, useEffect } from 'react';\nimport quizs from '../quizs';\nimport Navtab from '../components/Navtab';\nimport GetTable from '../components/GetTable';\nimport { Grid, Button } from '@material-ui/core';\nimport {IoRefresh} from 'react-icons/io5';\nimport './css/Draw.css';\nimport { dbService } from '../fbase';\nimport ResultTable from '../components/ReaultTable';\n\nconst Draw = () => {\n    const [init, setInit] = useState(false);\n    const [drawingTabIdx, setDrawingTabIdx] = useState(0);\n    const [isDrawingCorrector, setIsDrawingCorrector] = useState(0);\n    const [isDrawingFinished, setIsDrawingFinished] = useState(false);\n    const [isDrawable, setIsDrawable] = useState(true);\n    const [correctorInfos, setCorrectorInfos] = useState([]);\n    const [participantInfos, setParticipantInfos] = useState([]);\n    \n    const tabnames = [...quizs.map(q => `Quiz ${q.no}`), \"참여자\"];\n    const hideTel = tel => {\n        if(tel ===\"\" || !tel)\n            return \"-\"\n        else if(tel.length <=4)\n            return tel\n        else\n            return '***-****-'+tel.slice(-4);\n    }\n    const isCorrectAnswer = (answer, correctAnswerArr) => correctAnswerArr.includes(answer.toLowerCase());\n    // 퀴즈별 정답자 및 전체 참여자 데이터 가져오기\n    useEffect( async ()=>{\n        let dbCors =[];\n        await Promise.all( quizs.map( async (quiz) => {\n            const {no, answers} = quiz;\n            const participantsObj = (await dbService.collection(\"quiz_\"+no).get())\n                                    .docs.map( doc => doc.data());\n            dbCors=[...dbCors, participantsObj\n                                .filter( p => isCorrectAnswer( p.answer, answers ))\n                                .map( p => [p.name, p.tel])];\n        }))\n        let part = [];\n        (await dbService.collection('userinfo').get())\n            .docs.map( doc => doc.data())\n            .map( p => {\n                part = [...part, [p.name, p.tel]];\n            })\n        setCorrectorInfos(dbCors);\n        setParticipantInfos(part);\n        setInit(true)\n    },[])\n\n    const rand = (start, end) => Math.floor((Math.random() * (end-start+1)) + start);\n    const hasPerson = (peopleArr, person) => (\n        peopleArr.some( p => p[0]==person[0] && p[1] == person[1])\n    );\n    \n    const initiateDrawMachine = () => {\n        isDrawingCorrector === 0 ?\n            setIsDrawingCorrector(1)\n            : setIsDrawable(false);\n        setIsDrawingFinished(false);\n    }\n    const draw = async (curr) => {\n        // 정답자\n        let winners=[];\n        const type = curr === 0 ? 'corrector' : 'participant';\n        if(!curr){\n            correctorInfos.map( (quizCorrectors, idx) => {\n                let winner;\n                do {\n                    winner = quizCorrectors[rand(0, quizCorrectors.length-1)];\n                } while (hasPerson(winners, winner));\n                winners=[...winners, winner];\n            })\n        }\n        //참여자 전체\n        else{\n            // const corWinners = Object.values((await dbService.collection('current').doc('corrector').get()).data());\n            for(let i=0; i<10; i++){\n                let winner;\n                do {\n                    winner = participantInfos[rand(0, participantInfos.length-1)];\n                } while (hasPerson(winners, winner));\n                // } while (hasPerson([...corWinners,...winners], winner));\n                winners=[...winners, winner];\n            }\n        }\n        await new Promise((resolve, reject) => {\n            resolve('');\n        }).then(() => {\n            winners.map( async (w, idx) => {\n                setTimeout( () => {\n                    const no =parseInt(idx)+1;\n                    dbService.collection(\"current\").doc(type).update({\n                        [no]: w\n                    });\n                }, 500+1000*idx)\n                \n            })\n        }).then( () => {\n            setTimeout(() => setIsDrawingFinished(true), 500+winners.length*1000)\n        })\n        \n    }\n    \n    return(\n        <Grid container spacing={2}>\n            <Grid item xs={12} md={6}>\n                <Navtab tabnames={tabnames} tabIdx={drawingTabIdx} tabController={setDrawingTabIdx}>\n                    {\n                        [...correctorInfos, participantInfos].map( (c, idx) => (\n                            <GetTable \n                                key={idx}\n                                title={[\"이름\", \"전화번호\"]}\n                                content={c.map( (([name, tel]) => [name, hideTel(tel)]))}\n                                onBlankAltText={idx===correctorInfos.length ? \"참여자가 없습니다.\" : \"정답자가 없습니다.\"}/>\n                        ))\n                    }\n                </Navtab>\n            </Grid>\n            <Grid item xs={12} md={6}>\n                <div className=\"christmas-striped top\"/>\n                <div className=\"draw\">\n                    <Grid container alignContent=\"center\" spacing={1} className=\"draw-machine\">\n                        <Grid item xs={12}>\n                            <Button \n                                variant=\"contained\"\n                                color=\"primary\"\n                                fullWidth\n                                disabled={!isDrawable}\n                                onClick={ () => draw(isDrawingCorrector)}>\n                                    {!isDrawingCorrector ? \n                                        \"정답자 6인 추첨\" : \"참여자 10인 추첨\"}\n                            </Button>\n                        </Grid>\n                        <Grid container item xs={12}>\n                            <Grid item xs={6}>\n                                <Button \n                                variant=\"contained\"\n                                disabled={!isDrawingFinished}\n                                fullWidth\n                                color=\"secondary\"\n                                onClick={ () => {\n                                    setIsDrawingFinished(false);\n                                    draw(isDrawingCorrector)\n                                }}>\n                                    <IoRefresh size=\"16\"/>\n                                </Button>\n                            </Grid>\n                            <Grid item xs={6}>\n                                <Button \n                                    variant=\"contained\"\n                                    disabled={!isDrawingFinished}\n                                    fullWidth\n                                    color=\"default\"\n                                    onClick={initiateDrawMachine}>\n                                        {!isDrawingCorrector ? \n                                        \"다음 추첨\" : \"확인\"}\n                                </Button>\n                            </Grid>\n                        </Grid>\n                        \n                    </Grid>\n                    <ResultTable tabIdx={isDrawingCorrector} tabController={setIsDrawingCorrector}/>\n                </div>\n                <div className=\"christmas-striped bottom\"/>\n            </Grid>\n        </Grid>\n    )\n}\n\nexport default Draw;","/Users/sooyoung/youquiz/src/components/ChangeAnswer.js",["111","112","113"],"/Users/sooyoung/youquiz/src/Snow.js",[],"/Users/sooyoung/youquiz/src/fbase.js",[],"/Users/sooyoung/youquiz/src/quizs.js",["114"],"const quiz = (no, question, answers) => ({\n    no,\n    question,\n    answers\n})\nexport default [\n    quiz(1, \n        `북미 항공 우주 방위 사령부(NORAD)는 1995년부터 매년 크리스마스 이브마다 <u>'이 사람'</u>의 위치를 추적한다고 합니다.\n        NORAD 공식계정에서는 작년 12월 24일 <u>'이 사람'</u>이 한국과 일본 상공을 지나갔다는 글을 게시하기도 했는데요, 그렇다면 NORAD가 추적하는 <u>'이 사람'</u>은 누구일까요?`,\n        [\"산타클로스\", \"산타 클로스\", \"산타\", \"산타 할아버지\", \"산타할아버지\", \"santa\", \"santa claus\", \"santaclaus\"]),\n    quiz(2,\n        `한석규, 심은하 주연의 영화 <❍월의 크리스마스>(1998)는 개봉 후 22년이 흐른 지금까지도 역대 한국 멜로영화 최고의 걸작이라 평가받는 영화입니다.\n        2013년 관객들이 뽑은 '다시 보고싶은 명작' 1위에 선정되어 재개봉되기도 했는데요, <u>❍에 들어갈 숫자</u>는 무엇일까요? `,\n        [\"8\", \"8월\"]),\n    quiz(3,\n        `크리스마스가 되면 \"X-mas\"라는 문구를 종종 볼 수 있습니다. \n        \"X-mas\"의 'X'는 <u>이 나라</u> 말로 \"그리스도\"를 의미하는 단어의 앞 글자를 딴 것이라고 하는데요, 그렇다면 <u>이 나라</u>는 어느 나라일까요?`,\n        [\"그리스\", \"greece\"]),\n    quiz(4,\n        `<u>이 노래</u>는 1986년 영국의 팝 듀오 Wham!이 부른 노래로, 아리아나 그란데, 테일러 스위프트 등 유명 가수들이 리메이크하여 더욱 유명해진 크리스마스 캐롤입니다. <u>이 노래</u>는 무엇일까요?`,\n        [\"last christmas\", \"lastchristmas\", \"라스트 크리스마스\", \"라스트크리스마스\", \"래스트 크리스마스\"]),\n    quiz(5,\n        `[난센스 퀴즈]<br/>크리스마스에 중국집에서 <u>먹으면 안 되는 음식</u>은 무엇일까요?`,\n        [\"울면\"]),\n    quiz(6,\n        `아기 예수님께서는 베들레헴이라는 작은 시골마을의 말구유에서 나셨습니다. 그렇다면 히브리어로 <u>\"베들레헴\"의 뜻</u>은 무엇일까요?`,\n        [\"빵집\", \"bakery\", \"떡집\"]),\n];","/Users/sooyoung/youquiz/src/components/Ready.js",[],"/Users/sooyoung/youquiz/src/routes/ShowResult.js",[],"/Users/sooyoung/youquiz/src/components/GetTable.js",[],["115","116"],"/Users/sooyoung/youquiz/src/components/ReaultTable.js",["117"],"import React, { useEffect, useState } from 'react';\nimport GetTable from './GetTable';\nimport { dbService } from '../fbase';\nimport Navtab from './Navtab';\n\nconst ResultTable = ({tabIdx, tabController}) => {\n    const [correctorWinner, setCorrectorWinner] = useState([]);\n    const [participantWinner, setParticipantWinner] = useState([]);\n    useEffect(async ()=>{\n        dbService.collection('current').doc('corrector').onSnapshot( snapshot => {\n            const winners = snapshot.data();\n            setCorrectorWinner( winners ? Object.entries(winners).map( ([idx, infoArr]) => [idx, infoArr[0]]) : []);\n        })\n        dbService.collection('current').doc('participant').onSnapshot( snapshot => {\n            const winners = snapshot.data();\n            setParticipantWinner( winners ? Object.entries(winners).map( ([idx, infoArr]) => [idx, infoArr[0]]) : []);\n        })\n    },[])\n    \n    return(\n        <Navtab \n            tabnames={[\"정답자 6인\",\"참여자 10인\"]}\n            tabIdx={tabIdx || null}\n            tabController={tabController || null}>\n            <GetTable \n                title={[\"퀴즈\", \"당첨자\"]}\n                content={correctorWinner}\n                onBlankAltText=\"당첨자를 곧 추첨합니다!\"\n                />\n            <GetTable \n                title={[\"번호\", \"당첨자\"]}\n                content={participantWinner}\n                onBlankAltText=\"참여자 중 10명을 추첨합니다!\"\n                />\n        </Navtab>\n    )\n}\n\nexport default ResultTable;","/Users/sooyoung/youquiz/src/components/Navtab.js",[],{"ruleId":"118","severity":1,"message":"119","line":2,"column":47,"nodeType":"120","messageId":"121","endLine":2,"endColumn":55},{"ruleId":"122","severity":1,"message":"123","line":80,"column":8,"nodeType":"124","endLine":80,"endColumn":27,"suggestions":"125"},{"ruleId":"122","severity":1,"message":"126","line":100,"column":8,"nodeType":"124","endLine":100,"endColumn":20,"suggestions":"127"},{"ruleId":"122","severity":1,"message":"128","line":103,"column":8,"nodeType":"124","endLine":103,"endColumn":19,"suggestions":"129"},{"ruleId":"130","replacedBy":"131"},{"ruleId":"132","replacedBy":"133"},{"ruleId":"122","severity":1,"message":"134","line":26,"column":7,"nodeType":"124","endLine":26,"endColumn":20,"suggestions":"135"},{"ruleId":"130","replacedBy":"136"},{"ruleId":"132","replacedBy":"137"},{"ruleId":"138","severity":1,"message":"139","line":13,"column":18,"nodeType":"140","messageId":"141","endLine":13,"endColumn":20},{"ruleId":"130","replacedBy":"142"},{"ruleId":"132","replacedBy":"143"},{"ruleId":"130","replacedBy":"144"},{"ruleId":"132","replacedBy":"145"},{"ruleId":"118","severity":1,"message":"146","line":12,"column":12,"nodeType":"120","messageId":"121","endLine":12,"endColumn":16},{"ruleId":"122","severity":1,"message":"147","line":31,"column":16,"nodeType":"148","endLine":50,"endColumn":6},{"ruleId":"149","severity":1,"message":"150","line":44,"column":21,"nodeType":"148","messageId":"151","endLine":44,"endColumn":23},{"ruleId":"138","severity":1,"message":"139","line":54,"column":34,"nodeType":"140","messageId":"141","endLine":54,"endColumn":36},{"ruleId":"138","severity":1,"message":"139","line":54,"column":54,"nodeType":"140","messageId":"141","endLine":54,"endColumn":56},{"ruleId":"149","severity":1,"message":"150","line":68,"column":55,"nodeType":"148","messageId":"151","endLine":68,"endColumn":57},{"ruleId":"138","severity":1,"message":"139","line":17,"column":21,"nodeType":"140","messageId":"141","endLine":17,"endColumn":23},{"ruleId":"122","severity":1,"message":"147","line":30,"column":15,"nodeType":"148","endLine":36,"endColumn":6},{"ruleId":"122","severity":1,"message":"152","line":36,"column":8,"nodeType":"124","endLine":36,"endColumn":10,"suggestions":"153"},{"ruleId":"154","severity":1,"message":"155","line":6,"column":1,"nodeType":"156","endLine":28,"endColumn":3},{"ruleId":"130","replacedBy":"157"},{"ruleId":"132","replacedBy":"158"},{"ruleId":"122","severity":1,"message":"147","line":9,"column":15,"nodeType":"148","endLine":18,"endColumn":6},"no-unused-vars","'Redirect' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'checkSolved'. Either include it or remove the dependency array.","ArrayExpression",["159"],"React Hook useEffect has a missing dependency: 'playSarr'. Either include it or remove the dependency array.",["160"],"React Hook useEffect has a missing dependency: 'playDodongtak'. Either include it or remove the dependency array.",["161"],"no-native-reassign",["162"],"no-negated-in-lhs",["163"],"React Hook useEffect has missing dependencies: 'perc' and 'setGaugeValue'. Either include them or remove the dependency array.",["164"],["162"],["163"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected",["162"],["163"],["162"],["163"],"'init' is assigned a value but never used.","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","array-callback-return","Array.prototype.map() expects a return value from arrow function.","expectedInside","React Hook useEffect has missing dependencies: 'no' and 'user'. Either include them or remove the dependency array.",["165"],"import/no-anonymous-default-export","Assign array to a variable before exporting as module default","ExportDefaultDeclaration",["162"],["163"],{"desc":"166","fix":"167"},{"desc":"168","fix":"169"},{"desc":"170","fix":"171"},"no-global-assign","no-unsafe-negation",{"desc":"172","fix":"173"},{"desc":"174","fix":"175"},"Update the dependencies array to be: [checkSolved, currentQuiz, user]",{"range":"176","text":"177"},"Update the dependencies array to be: [playSarr, showAnswer]",{"range":"178","text":"179"},"Update the dependencies array to be: [playDodongtak, showScore]",{"range":"180","text":"181"},"Update the dependencies array to be: [score, goal, setGaugeValue, perc]",{"range":"182","text":"183"},"Update the dependencies array to be: [no, user]",{"range":"184","text":"185"},[3003,3022],"[checkSolved, currentQuiz, user]",[3667,3679],"[playSarr, showAnswer]",[3749,3760],"[playDodongtak, showScore]",[800,813],"[score, goal, setGaugeValue, perc]",[1366,1368],"[no, user]"]