[{"/Users/sooyoung/youquiz/src/components/App.js":"1","/Users/sooyoung/youquiz/src/components/Router.js":"2","/Users/sooyoung/youquiz/src/routes/Auth.js":"3","/Users/sooyoung/youquiz/src/routes/Home.js":"4","/Users/sooyoung/youquiz/src/components/Quiz.js":"5","/Users/sooyoung/youquiz/src/routes/CreateAccount.js":"6","/Users/sooyoung/youquiz/src/components/Board.js":"7","/Users/sooyoung/youquiz/src/components/SubmitAnswer.js":"8","/Users/sooyoung/youquiz/src/components/Wrongs.js":"9","/Users/sooyoung/youquiz/src/index.js":"10","/Users/sooyoung/youquiz/src/routes/Draw.js":"11","/Users/sooyoung/youquiz/src/components/ChangeAnswer.js":"12","/Users/sooyoung/youquiz/src/Snow.js":"13","/Users/sooyoung/youquiz/src/fbase.js":"14","/Users/sooyoung/youquiz/src/quizs.js":"15","/Users/sooyoung/youquiz/src/components/Ready.js":"16","/Users/sooyoung/youquiz/src/routes/ShowResult.js":"17","/Users/sooyoung/youquiz/src/components/GetTable.js":"18","/Users/sooyoung/youquiz/src/components/ReaultTable.js":"19","/Users/sooyoung/youquiz/src/components/Navtab.js":"20"},{"size":1581,"mtime":1606970604319,"results":"21","hashOfConfig":"22"},{"size":1519,"mtime":1607336798452,"results":"23","hashOfConfig":"22"},{"size":2978,"mtime":1607225204335,"results":"24","hashOfConfig":"22"},{"size":6540,"mtime":1607354297273,"results":"25","hashOfConfig":"22"},{"size":1299,"mtime":1607172037459,"results":"26","hashOfConfig":"22"},{"size":2623,"mtime":1606750638124,"results":"27","hashOfConfig":"22"},{"size":1183,"mtime":1606932375161,"results":"28","hashOfConfig":"22"},{"size":1688,"mtime":1607178348214,"results":"29","hashOfConfig":"22"},{"size":1773,"mtime":1606931708599,"results":"30","hashOfConfig":"22"},{"size":230,"mtime":1606994256975,"results":"31","hashOfConfig":"22"},{"size":7254,"mtime":1607353563381,"results":"32","hashOfConfig":"22"},{"size":2504,"mtime":1606932908890,"results":"33","hashOfConfig":"22"},{"size":940,"mtime":1607264322719,"results":"34","hashOfConfig":"22"},{"size":781,"mtime":1606624977062,"results":"35","hashOfConfig":"22"},{"size":2222,"mtime":1607342811392,"results":"36","hashOfConfig":"22"},{"size":1450,"mtime":1607269165769,"results":"37","hashOfConfig":"22"},{"size":202,"mtime":1607354379819,"results":"38","hashOfConfig":"22"},{"size":1323,"mtime":1607270925071,"results":"39","hashOfConfig":"22"},{"size":1533,"mtime":1607354399266,"results":"40","hashOfConfig":"22"},{"size":2315,"mtime":1607353654003,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"1lsnn2d",{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"58"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"73"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"80","messages":"81","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"86","messages":"87","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"88","messages":"89","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/sooyoung/youquiz/src/components/App.js",[],["90","91"],"/Users/sooyoung/youquiz/src/components/Router.js",["92"],"/Users/sooyoung/youquiz/src/routes/Auth.js",[],"/Users/sooyoung/youquiz/src/routes/Home.js",["93","94","95","96"],"/Users/sooyoung/youquiz/src/components/Quiz.js",[],"/Users/sooyoung/youquiz/src/routes/CreateAccount.js",[],"/Users/sooyoung/youquiz/src/components/Board.js",["97","98"],"import React from 'react';\nimport { IoLogoOctocat, IoCheckmarkCircleSharp } from 'react-icons/io5'\n\n\nconst Board = ({participants, corrects}) => {\n    return(\n        <>\n        <div className=\"christmas-striped top slim\"/>\n        <div id=\"board\">\n            <h4>\n                { participants && corrects ?\n                    <IoCheckmarkCircleSharp size=\"28\"/>\n                    :\n                     <IoLogoOctocat size=\"28\"/>\n                }\n                &nbsp;\n                <span>\n\n                {\n                    participants == 0 ?\n                    \"아직 참여하신 분이 없습니다. 제일 먼저 퀴즈를 풀어보세요!\"\n                    :\n                    corrects == 0 ?\n                    `참여해주신 ${participants}분 중 아직 정답자가 없습니다! 가장 먼저 정답을 맞혀봐요!`\n                    :\n                    `참여해주신 ${participants}분 중에서 ${corrects}분이 정답을 맞히셨습니다!`\n                }\n                </span>\n                \n            </h4>\n        </div>\n        <div className=\"christmas-striped bottom slim\"/>\n        </>\n    )\n}\n\nexport default Board;",["99","100"],"/Users/sooyoung/youquiz/src/components/SubmitAnswer.js",["101","102","103"],"/Users/sooyoung/youquiz/src/components/Wrongs.js",[],["104","105"],"/Users/sooyoung/youquiz/src/index.js",[],["106","107"],"/Users/sooyoung/youquiz/src/routes/Draw.js",["108","109","110","111","112","113"],"import React, { useState, useEffect } from 'react';\nimport quizs from '../quizs';\nimport Navtab from '../components/Navtab';\nimport GetTable from '../components/GetTable';\nimport { Grid, Button } from '@material-ui/core';\nimport {IoRefresh} from 'react-icons/io5';\nimport './css/Draw.css';\nimport { dbService } from '../fbase';\nimport ResultTable from '../components/ReaultTable';\n\nconst Draw = () => {\n    const [init, setInit] = useState(false);\n    const [drawingTabIdx, setDrawingTabIdx] = useState(0);\n    const [isDrawingCorrector, setIsDrawingCorrector] = useState(0);\n    const [isDrawingFinished, setIsDrawingFinished] = useState(false);\n    const [isDrawable, setIsDrawable] = useState(true);\n    const [correctorInfos, setCorrectorInfos] = useState([]);\n    const [participantInfos, setParticipantInfos] = useState([]);\n    \n    const tabnames = [...quizs.map(q => `Quiz ${q.no}`), \"참여자\"];\n    const hideTel = tel => {\n        if(tel ===\"\" || !tel)\n            return \"-\"\n        else if(tel.length <=4)\n            return tel\n        else\n            return '***-****-'+tel.slice(-4);\n    }\n    const isCorrectAnswer = (answer, correctAnswerArr) => correctAnswerArr.includes(answer.toLowerCase());\n    // 퀴즈별 정답자 및 전체 참여자 데이터 가져오기\n    useEffect( async ()=>{\n        let dbCors =[];\n        await Promise.all( quizs.map( async (quiz) => {\n            const {no, answers} = quiz;\n            const participantsObj = (await dbService.collection(\"quiz_\"+no).get())\n                                    .docs.map( doc => doc.data());\n            dbCors=[...dbCors, participantsObj\n                                .filter( p => isCorrectAnswer( p.answer, answers ))\n                                .map( p => [p.name, p.tel])];\n        }))\n        let part = [];\n        (await dbService.collection('userinfo').get())\n            .docs.map( doc => doc.data())\n            .map( p => {\n                part = [...part, [p.name, p.tel]];\n            })\n        setCorrectorInfos(dbCors);\n        setParticipantInfos(part);\n        setInit(true)\n    },[])\n\n    const rand = (start, end) => Math.floor((Math.random() * (end-start+1)) + start);\n    const hasPerson = (peopleArr, person) => (\n        peopleArr.some( p => p[0]==person[0] && p[1] == person[1])\n    );\n    \n    const initiateDrawMachine = () => {\n        isDrawingCorrector === 0 ?\n            setIsDrawingCorrector(1)\n            : setIsDrawable(false);\n        setIsDrawingFinished(false);\n    }\n    const draw = async (curr) => {\n        // 정답자\n        let winners=[];\n        const type = curr === 0 ? 'corrector' : 'participant';\n        if(!curr){\n            correctorInfos.map( (quizCorrectors, idx) => {\n                let winner;\n                do {\n                    winner = quizCorrectors[rand(0, quizCorrectors.length-1)];\n                } while (hasPerson(winners, winner));\n                winners=[...winners, winner];\n            })\n        }\n        //참여자 전체\n        else{\n            // const corWinners = Object.values((await dbService.collection('current').doc('corrector').get()).data());\n            for(let i=0; i<10; i++){\n                let winner;\n                do {\n                    winner = participantInfos[rand(0, participantInfos.length-1)];\n                } while (hasPerson(winners, winner));\n                // } while (hasPerson([...corWinners,...winners], winner));\n                winners=[...winners, winner];\n            }\n        }\n        await new Promise((resolve, reject) => {\n            resolve('');\n        }).then(() => {\n            winners.map( async (w, idx) => {\n                setTimeout( () => {\n                    const no =parseInt(idx)+1;\n                    dbService.collection(\"current\").doc(type).update({\n                        [no]: w\n                    });\n                }, 500+1000*idx)\n                \n            })\n        }).then( () => {\n            setTimeout(() => setIsDrawingFinished(true), 500+winners.length*1000)\n        })\n        \n    }\n    \n    return(\n        <Grid container spacing={2}>\n            <Grid item xs={12} md={6}>\n                <Navtab tabnames={tabnames} tabIdx={drawingTabIdx} tabController={setDrawingTabIdx}>\n                    {\n                        [...correctorInfos, participantInfos].map( (c, idx) => (\n                            <GetTable \n                                key={idx}\n                                title={[\"이름\", \"전화번호\"]}\n                                content={c.map( (([name, tel]) => [name, hideTel(tel)]))}\n                                onBlankAltText={idx===correctorInfos.length ? \"참여자가 없습니다.\" : \"정답자가 없습니다.\"}/>\n                        ))\n                    }\n                </Navtab>\n            </Grid>\n            <Grid item xs={12} md={6}>\n                <div className=\"christmas-striped top\"/>\n                <div className=\"draw\">\n                    <Grid container alignContent=\"center\" spacing={1} className=\"draw-machine\">\n                        <Grid item xs={12}>\n                            <Button \n                                variant=\"contained\"\n                                color=\"primary\"\n                                fullWidth\n                                disabled={!isDrawable}\n                                onClick={ () => draw(isDrawingCorrector)}>\n                                    {!isDrawingCorrector ? \n                                        \"정답자 6인 추첨\" : \"참여자 10인 추첨\"}\n                            </Button>\n                        </Grid>\n                        <Grid container item xs={12}>\n                            <Grid item xs={6}>\n                                <Button \n                                variant=\"contained\"\n                                disabled={!isDrawingFinished}\n                                fullWidth\n                                color=\"secondary\"\n                                onClick={ () => {\n                                    setIsDrawingFinished(false);\n                                    draw(isDrawingCorrector)\n                                }}>\n                                    <IoRefresh size=\"16\"/>\n                                </Button>\n                            </Grid>\n                            <Grid item xs={6}>\n                                <Button \n                                    variant=\"contained\"\n                                    disabled={!isDrawingFinished}\n                                    fullWidth\n                                    color=\"default\"\n                                    onClick={initiateDrawMachine}>\n                                        {!isDrawingCorrector ? \n                                        \"다음 추첨\" : \"확인\"}\n                                </Button>\n                            </Grid>\n                        </Grid>\n                        \n                    </Grid>\n                    <ResultTable tabIdx={isDrawingCorrector} tabController={setIsDrawingCorrector}/>\n                </div>\n                <div className=\"christmas-striped bottom\"/>\n            </Grid>\n        </Grid>\n    )\n}\n\nexport default Draw;","/Users/sooyoung/youquiz/src/components/ChangeAnswer.js",["114","115","116","117"],"import React, { useEffect, useState } from 'react';\nimport { Button, InputLabel, Input, FormControl } from '@material-ui/core';\nimport { dbService } from '../fbase';\n\n\nconst ChangeAnswer = ({user, no}) => {\n    const [myAnswer, setMyAnswer] = useState('');\n    const [newAnswer, setNewAnswer] = useState('');\n    const [answerCorrectionMode, setAnswerCorrectionMode] = useState(false);\n    const toggleAnswerCorrectionMode = () => setAnswerCorrectionMode( prev => !prev);\n    const onInputChange = (event) => {\n        const {target: {value}} = event;\n        setNewAnswer(value);\n    }\n    const correctAnswer = async (event) => {\n        event.preventDefault();\n        if(newAnswer==''){\n            alert('변경하실 정답을 입력해주세요.');\n            return;\n        }\n        if(newAnswer !== myAnswer){\n            const dbAns = await dbService.collection('quiz_'+no).where('uid','==',user.uid).get();\n            await dbService.collection('quiz_'+no).doc(dbAns.docs[0].id).update({\n                answer:newAnswer\n            })\n            setMyAnswer(newAnswer);\n        }\n        toggleAnswerCorrectionMode();\n    }\n    useEffect(async () => {\n        const dbAns = (await dbService.collection('quiz_'+no).where('uid','==',user.uid).get()).docs[0].data().answer;\n        setMyAnswer(dbAns);\n        setNewAnswer(dbAns);\n    }, [])\n\n    return (\n        <div className=\"already-submit-message\">\n            {\n                answerCorrectionMode ?\n                <>\n                <FormControl style={{alignItems:\"center\", textAlign:\"center\"}}>\n                    <Input id=\"correct-input\" \n                        type=\"text\" \n                        aria-describedby=\"correct-helper\" \n                        name=\"correct\"\n                        onChange={onInputChange}   \n                        value={newAnswer}\n                        style={{width:\"70%\", textAlign:\"center\"}}/>\n                </FormControl>\n                <Button onClick={correctAnswer} variant=\"contained\" color=\"secondary\" >\n                    수정\n                </Button>\n                </>\n                :\n                <>\n                <div className=\"my-answer\">\n                    <h3>내 정답 : {myAnswer}</h3>\n                </div>\n                <Button onClick={toggleAnswerCorrectionMode} variant=\"contained\" color=\"primary\">\n                    바꾸기\n                </Button>\n                </>\n            }\n        </div>\n    )\n}\n\nexport default ChangeAnswer;",["118","119"],"/Users/sooyoung/youquiz/src/Snow.js",[],"/Users/sooyoung/youquiz/src/fbase.js",[],"/Users/sooyoung/youquiz/src/quizs.js",["120"],"/Users/sooyoung/youquiz/src/components/Ready.js",["121","122","123"],"/Users/sooyoung/youquiz/src/routes/ShowResult.js",[],"/Users/sooyoung/youquiz/src/components/GetTable.js",[],"/Users/sooyoung/youquiz/src/components/ReaultTable.js",["124"],"/Users/sooyoung/youquiz/src/components/Navtab.js",["125","126"],{"ruleId":"127","replacedBy":"128"},{"ruleId":"129","replacedBy":"130"},{"ruleId":"131","severity":1,"message":"132","line":2,"column":47,"nodeType":"133","messageId":"134","endLine":2,"endColumn":55},{"ruleId":"135","severity":1,"message":"136","line":58,"column":8,"nodeType":"137","endLine":58,"endColumn":34,"suggestions":"138"},{"ruleId":"135","severity":1,"message":"139","line":59,"column":16,"nodeType":"140","endLine":73,"endColumn":6},{"ruleId":"141","severity":1,"message":"142","line":65,"column":39,"nodeType":"140","messageId":"143","endLine":65,"endColumn":41},{"ruleId":"135","severity":1,"message":"144","line":76,"column":8,"nodeType":"137","endLine":76,"endColumn":20,"suggestions":"145"},{"ruleId":"146","severity":1,"message":"147","line":20,"column":34,"nodeType":"148","messageId":"149","endLine":20,"endColumn":36},{"ruleId":"146","severity":1,"message":"147","line":23,"column":30,"nodeType":"148","messageId":"149","endLine":23,"endColumn":32},{"ruleId":"127","replacedBy":"150"},{"ruleId":"129","replacedBy":"151"},{"ruleId":"131","severity":1,"message":"152","line":2,"column":9,"nodeType":"133","messageId":"134","endLine":2,"endColumn":14},{"ruleId":"131","severity":1,"message":"153","line":2,"column":62,"nodeType":"133","messageId":"134","endLine":2,"endColumn":76},{"ruleId":"146","severity":1,"message":"147","line":13,"column":18,"nodeType":"148","messageId":"149","endLine":13,"endColumn":20},{"ruleId":"127","replacedBy":"154"},{"ruleId":"129","replacedBy":"155"},{"ruleId":"127","replacedBy":"156"},{"ruleId":"129","replacedBy":"157"},{"ruleId":"131","severity":1,"message":"158","line":12,"column":12,"nodeType":"133","messageId":"134","endLine":12,"endColumn":16},{"ruleId":"135","severity":1,"message":"139","line":31,"column":16,"nodeType":"140","endLine":50,"endColumn":6},{"ruleId":"141","severity":1,"message":"142","line":44,"column":21,"nodeType":"140","messageId":"143","endLine":44,"endColumn":23},{"ruleId":"146","severity":1,"message":"147","line":54,"column":34,"nodeType":"148","messageId":"149","endLine":54,"endColumn":36},{"ruleId":"146","severity":1,"message":"147","line":54,"column":54,"nodeType":"148","messageId":"149","endLine":54,"endColumn":56},{"ruleId":"141","severity":1,"message":"142","line":68,"column":55,"nodeType":"140","messageId":"143","endLine":68,"endColumn":57},{"ruleId":"131","severity":1,"message":"159","line":2,"column":18,"nodeType":"133","messageId":"134","endLine":2,"endColumn":28},{"ruleId":"146","severity":1,"message":"147","line":17,"column":21,"nodeType":"148","messageId":"149","endLine":17,"endColumn":23},{"ruleId":"135","severity":1,"message":"139","line":30,"column":15,"nodeType":"140","endLine":34,"endColumn":6},{"ruleId":"135","severity":1,"message":"160","line":34,"column":8,"nodeType":"137","endLine":34,"endColumn":10,"suggestions":"161"},{"ruleId":"127","replacedBy":"162"},{"ruleId":"129","replacedBy":"163"},{"ruleId":"164","severity":1,"message":"165","line":6,"column":1,"nodeType":"166","endLine":28,"endColumn":3},{"ruleId":"131","severity":1,"message":"167","line":2,"column":10,"nodeType":"133","messageId":"134","endLine":2,"endColumn":14},{"ruleId":"131","severity":1,"message":"152","line":2,"column":24,"nodeType":"133","messageId":"134","endLine":2,"endColumn":29},{"ruleId":"131","severity":1,"message":"168","line":7,"column":10,"nodeType":"133","messageId":"134","endLine":7,"endColumn":23},{"ruleId":"135","severity":1,"message":"139","line":9,"column":15,"nodeType":"140","endLine":18,"endColumn":6},{"ruleId":"131","severity":1,"message":"169","line":7,"column":8,"nodeType":"133","messageId":"134","endLine":7,"endColumn":18},{"ruleId":"131","severity":1,"message":"170","line":8,"column":8,"nodeType":"133","messageId":"134","endLine":8,"endColumn":11},"no-native-reassign",["171"],"no-negated-in-lhs",["172"],"no-unused-vars","'Redirect' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'checkSolved'. Either include it or remove the dependency array. Outer scope values like 'quizs' aren't valid dependencies because mutating them doesn't re-render the component.","ArrayExpression",["173"],"Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","array-callback-return","Array.prototype.map() expects a return value from arrow function.","expectedInside","React Hook useEffect has a missing dependency: 'play'. Either include it or remove the dependency array.",["174"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected",["171"],["172"],"'Paper' is defined but never used.","'FormHelperText' is defined but never used.",["171"],["172"],["171"],["172"],"'init' is assigned a value but never used.","'InputLabel' is defined but never used.","React Hook useEffect has missing dependencies: 'no' and 'user.uid'. Either include them or remove the dependency array.",["175"],["171"],["172"],"import/no-anonymous-default-export","Assign array to a variable before exporting as module default","ExportDefaultDeclaration","'Grid' is defined but never used.","'IoLogoOctocat' is defined but never used.","'Typography' is defined but never used.","'Box' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"176","fix":"177"},{"desc":"178","fix":"179"},{"desc":"180","fix":"181"},"Update the dependencies array to be: [currentQuiz, user, checkSolved]",{"range":"182","text":"183"},"Update the dependencies array to be: [play, showAnswer]",{"range":"184","text":"185"},"Update the dependencies array to be: [no, user.uid]",{"range":"186","text":"187"},[2034,2060],"[currentQuiz, user, checkSolved]",[2718,2730],"[play, showAnswer]",[1326,1328],"[no, user.uid]"]